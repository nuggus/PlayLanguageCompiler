// Abstract Syntax tree
graph {
	0 [label=program]
	1 [label=var]
	2 [label=X]
		1 -- 2
	3 [label=as]
		1 -- 3
	4 [label=int]
	4 [label=int]
		1 -- 4
	5 [label=";"]
		1 -- 5
	1 [label=var]
		0 -- 1
	6 [label=begin]
		0 -- 6
	7 [label=X]
	8 [label=":="]
		7 -- 8
	9 [label=readint]
	9 [label=readint]
		7 -- 9
	7 [label=X]
	7 [label=X]
	10 [label=";"]
		7 -- 10
	11 [label=writeint]
	12 [label=2]
	12 [label=2]
	13 [label="*"]
	14 [label=X]
	14 [label=X]
	14 [label=X]
		13 -- 14
	13 [label="*"]
		12 -- 13
	12 [label=2]
	12 [label=2]
	12 [label=2]
		11 -- 12
	11 [label=writeint]
	11 [label=writeint]
	15 [label=";"]
		11 -- 15
	11 [label=writeint]
		7 -- 11
	7 [label=X]
		0 -- 7
	16 [label=end]
		0 -- 16
}